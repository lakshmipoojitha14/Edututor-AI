import { useState } from "react";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { 
  Users, 
  BookOpen, 
  TrendingUp, 
  AlertCircle,
  Eye,
  Download,
  Filter
} from "lucide-react";

interface EducatorDashboardProps {
  onBack: () => void;
}

const EducatorDashboard = ({ onBack }: EducatorDashboardProps) => {
  const [classData] = useState({
    totalStudents: 32,
    activeQuizzes: 8,
    averageClassScore: 84,
    completionRate: 78,
    students: [
      { 
        id: 1, 
        name: "Alice Johnson", 
        lastActive: "2 hours ago", 
        averageScore: 92, 
        quizzesCompleted: 15,
        status: "excellent"
      },
      { 
        id: 2, 
        name: "Bob Smith", 
        lastActive: "1 day ago", 
        averageScore: 78, 
        quizzesCompleted: 12,
        status: "good"
      },
      { 
        id: 3, 
        name: "Carol Davis", 
        lastActive: "3 days ago", 
        averageScore: 65, 
        quizzesCompleted: 8,
        status: "needs-attention"
      },
      { 
        id: 4, 
        name: "David Wilson", 
        lastActive: "1 hour ago", 
        averageScore: 89, 
        quizzesCompleted: 18,
        status: "excellent"
      }
    ],
    subjectPerformance: {
      mathematics: { average: 85, students: 28 },
      science: { average: 82, students: 30 },
      history: { average: 78, students: 25 },
      literature: { average: 88, students: 32 }
    }
  });

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'excellent': return 'bg-green-100 text-green-800';
      case 'good': return 'bg-blue-100 text-blue-800';
      case 'needs-attention': return 'bg-yellow-100 text-yellow-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="min-h-screen p-4 bg-gradient-to-br from-purple-600 via-blue-600 to-indigo-800">
      <div className="max-w-7xl mx-auto space-y-6">
        {/* Header */}
        <Card className="bg-white/95 backdrop-blur-sm">
          <CardHeader>
            <div className="flex items-center justify-between">
              <div>
                <CardTitle className="text-3xl bg-gradient-to-r from-purple-600 to-blue-600 bg-clip-text text-transparent">
                  Educator Dashboard
                </CardTitle>
                <p className="text-gray-600 mt-2">Monitor student progress and performance</p>
              </div>
              <Button onClick={onBack} variant="outline">
                Back to Main
              </Button>
            </div>
          </CardHeader>
        </Card>

        {/* Overview Stats */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
          <Card className="bg-white/95 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center space-x-3">
                <Users className="w-8 h-8 text-blue-600" />
                <div>
                  <p className="text-2xl font-bold">{classData.totalStudents}</p>
                  <p className="text-sm text-gray-600">Total Students</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white/95 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center space-x-3">
                <BookOpen className="w-8 h-8 text-green-600" />
                <div>
                  <p className="text-2xl font-bold">{classData.activeQuizzes}</p>
                  <p className="text-sm text-gray-600">Active Quizzes</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white/95 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center space-x-3">
                <TrendingUp className="w-8 h-8 text-purple-600" />
                <div>
                  <p className="text-2xl font-bold">{classData.averageClassScore}%</p>
                  <p className="text-sm text-gray-600">Class Average</p>
                </div>
              </div>
            </CardContent>
          </Card>

          <Card className="bg-white/95 backdrop-blur-sm">
            <CardContent className="p-6">
              <div className="flex items-center space-x-3">
                <AlertCircle className="w-8 h-8 text-orange-600" />
                <div>
                  <p className="text-2xl font-bold">{classData.completionRate}%</p>
                  <p className="text-sm text-gray-600">Completion Rate</p>
                </div>
              </div>
            </CardContent>
          </Card>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          {/* Student Performance */}
          <Card className="bg-white/95 backdrop-blur-sm">
            <CardHeader>
              <div className="flex items-center justify-between">
                <CardTitle>Student Performance</CardTitle>
                <div className="flex gap-2">
                  <Button size="sm" variant="outline">
                    <Filter className="w-4 h-4 mr-2" />
                    Filter
                  </Button>
                  <Button size="sm" variant="outline">
                    <Download className="w-4 h-4 mr-2" />
                    Export
                  </Button>
                </div>
              </div>
            </CardHeader>
            <CardContent>
              <div className="space-y-4">
                {classData.students.map((student) => (
                  <div key={student.id} className="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                    <div className="flex-1">
                      <div className="flex items-center justify-between mb-2">
                        <h4 className="font-medium">{student.name}</h4>
                        <Badge className={getStatusColor(student.status)}>
                          {student.averageScore}%
                        </Badge>
                      </div>
                      <div className="flex items-center text-sm text-gray-600 space-x-4">
                        <span>Last active: {student.lastActive}</span>
                        <span>Quizzes: {student.quizzesCompleted}</span>
                      </div>
                    </div>
                    <Button size="sm" variant="ghost">
                      <Eye className="w-4 h-4" />
                    </Button>
                  </div>
                ))}
              </div>
            </CardContent>
          </Card>

          {/* Subject Performance */}
          <Card className="bg-white/95 backdrop-blur-sm">
            <CardHeader>
              <CardTitle>Subject Performance</CardTitle>
            </CardHeader>
            <CardContent className="space-y-6">
              {Object.entries(classData.subjectPerformance).map(([subject, data]) => (
                <div key={subject} className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="capitalize font-medium">{subject}</span>
                    <div className="text-sm text-gray-600">
                      {data.average}% ({data.students} students)
                    </div>
                  </div>
                  <Progress value={data.average} className="h-3" />
                </div>
              ))}
            </CardContent>
          </Card>
        </div>

        {/* Recent Activity & Insights */}
        <Card className="bg-white/95 backdrop-blur-sm">
          <CardHeader>
            <CardTitle>Insights & Recommendations</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div className="p-4 bg-green-50 rounded-lg border border-green-200">
                <h4 className="font-medium text-green-800 mb-2">High Performers</h4>
                <p className="text-sm text-green-700">
                  3 students consistently scoring above 90%. Consider providing advanced challenges.
                </p>
              </div>
              
              <div className="p-4 bg-yellow-50 rounded-lg border border-yellow-200">
                <h4 className="font-medium text-yellow-800 mb-2">Needs Attention</h4>
                <p className="text-sm text-yellow-700">
                  2 students haven't been active for 3+ days. Consider reaching out.
                </p>
              </div>
              
              <div className="p-4 bg-blue-50 rounded-lg border border-blue-200">
                <h4 className="font-medium text-blue-800 mb-2">Trending Topics</h4>
                <p className="text-sm text-blue-700">
                  Mathematics quizzes show 15% improvement this week.
                </p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </div>
  );
};
